// Code generated by go generate; DO NOT EDIT.
package protocol

import "encoding/json"
{{- range $req := .Notifications }}
{{- $title :=  replace (replace (replace .Method "/" " " | title) " " "") "$" "" }}
const {{ $title }}Method = {{ printf "%q" .Method }}

{{ if $req.Documentation -}}
{{ $req.Documentation | comment }}
{{- end }}
type {{ $title }}Notification struct {
{{ "Jsonrpc" | indent }} string `json:"jsonrpc"`
{{ "Method" | indent }} string `json:"method"`
{{ "Params" | indent }} {{ $req.Params | gotype }} `json:"params,omitempty"`
}

func New{{ $title }}Notification(id int, params {{ $req.Params | gotype }}) {{ $title }}Notification {
{{ "return" | indent }} {{ $title }}Notification{Jsonrpc: "2.0", Method: {{ $title }}Method, Params: params }
}

// Marshal r into {{ $title }}Notification
func (m Message) {{ $title }}() (v {{ $title }}Notification) {
{{ "json.Unmarshal(m.raw, &v)" | indent }}
{{ "return" | indent }}
}
{{ end -}}
