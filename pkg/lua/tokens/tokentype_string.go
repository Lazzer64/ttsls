// Code generated by "stringer -type=TokenType"; DO NOT EDIT.

package tokens

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[INVALID-0]
	_ = x[AND-1]
	_ = x[BREAK-2]
	_ = x[DO-3]
	_ = x[ELSE-4]
	_ = x[ELSEIF-5]
	_ = x[END-6]
	_ = x[FALSE-7]
	_ = x[FOR-8]
	_ = x[FUNCTION-9]
	_ = x[GOTO-10]
	_ = x[IF-11]
	_ = x[IN-12]
	_ = x[LOCAL-13]
	_ = x[NIL-14]
	_ = x[NOT-15]
	_ = x[OR-16]
	_ = x[REPEAT-17]
	_ = x[RETURN-18]
	_ = x[THEN-19]
	_ = x[TRUE-20]
	_ = x[UNTIL-21]
	_ = x[WHILE-22]
	_ = x[INCLUDE-23]
	_ = x[PLUS-24]
	_ = x[MINUS-25]
	_ = x[MULT-26]
	_ = x[DIV-27]
	_ = x[MOD-28]
	_ = x[POW-29]
	_ = x[LEN-30]
	_ = x[BIT_AND-31]
	_ = x[BIT_XOR-32]
	_ = x[BIT_OR-33]
	_ = x[BIT_L_SHIFT-34]
	_ = x[BIT_R_SHIFT-35]
	_ = x[DIV_FLOOR-36]
	_ = x[EQUALITY-37]
	_ = x[INEQUALITY-38]
	_ = x[LESS_EQUAL-39]
	_ = x[GREAT_EQUAL-40]
	_ = x[LESS-41]
	_ = x[GREAT-42]
	_ = x[ASSIGN-43]
	_ = x[PAREN_L-44]
	_ = x[PAREN_R-45]
	_ = x[CURLY_L-46]
	_ = x[CURLY_R-47]
	_ = x[SQUARE_L-48]
	_ = x[SQUARE_R-49]
	_ = x[LABEL-50]
	_ = x[SEMI_COLON-51]
	_ = x[COLON-52]
	_ = x[COMMA-53]
	_ = x[DOT-54]
	_ = x[CONCAT-55]
	_ = x[VARIADIC-56]
	_ = x[COMMENT-57]
	_ = x[IDENTIFIER-58]
	_ = x[STRING-59]
	_ = x[NUMBER-60]
}

const _TokenType_name = "INVALIDANDBREAKDOELSEELSEIFENDFALSEFORFUNCTIONGOTOIFINLOCALNILNOTORREPEATRETURNTHENTRUEUNTILWHILEINCLUDEPLUSMINUSMULTDIVMODEXPLENBIT_ANDBIT_XORBIT_ORBIT_L_SHIFTBIT_R_SHIFTDIV_FLOOREQUALITYINEQUALITYLESS_EQUALGREAT_EQUALLESSGREATASSIGNPAREN_LPAREN_RCURLY_LCURLY_RSQUARE_LSQUARE_RLABELSEMI_COLONCOLONCOMMADOTCONCATVARIADICCOMMENTIDENTIFIERSTRINGNUMBER"

var _TokenType_index = [...]uint16{0, 7, 10, 15, 17, 21, 27, 30, 35, 38, 46, 50, 52, 54, 59, 62, 65, 67, 73, 79, 83, 87, 92, 97, 104, 108, 113, 117, 120, 123, 126, 129, 136, 143, 149, 160, 171, 180, 188, 198, 208, 219, 223, 228, 234, 241, 248, 255, 262, 270, 278, 283, 293, 298, 303, 306, 312, 320, 327, 337, 343, 349}

func (i TokenType) String() string {
	if i < 0 || i >= TokenType(len(_TokenType_index)-1) {
		return "TokenType(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _TokenType_name[_TokenType_index[i]:_TokenType_index[i+1]]
}
